apiVersion: apps/v1
kind: Deployment
metadata:
  name: chat-proxy
  labels:
    app: chat-proxy
spec:
  selector:
    matchLabels:
      app: chat-proxy
  replicas: 1
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: chat-proxy
    spec:
      volumes:
        - name: chat-proxy-cache
          persistentVolumeClaim:
            claimName: chat-proxy-cache
      containers:
      - name: chat-proxy
        image: {{ .Values.proxy.image }}
        imagePullPolicy: Always
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
          limits:
            cpu: 100m
            memory: 100Mi
        env:
        - name: CHATAPI_SVC
          value: chatgpt-api
        ports:
        - containerPort: 9000
          name: http
        volumeMounts:
        - mountPath: /cache
          name: chat-proxy-cache
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    app: chat-proxy-cache
  name: chat-proxy-cache
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: Service
metadata:
  name: chat-proxy
spec:
  selector:
    app: chat-proxy
  type: ClusterIP
  ports:
  - name: http
    protocol: TCP
    port: 9000
    targetPort: 9000
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: proxy-watcher-role
rules:
- apiGroups:
  - ""
  resources:
  - pods
  - endpoints
  verbs:
  - get
  - watch
  - list
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: proxy-watcher-role
subjects:
- kind: ServiceAccount
  name: default
